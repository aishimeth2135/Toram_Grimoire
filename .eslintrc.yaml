root: true
env:
  node: true
extends:
  - eslint:recommended
  - plugin:vue/vue3-essential
  - '@vue/eslint-config-typescript'
  - prettier
parserOptions:
  parsers:
    ts: '@typescript-eslint/parser'
plugins:
  - jsdoc
  - import
settings:
  import/resolver:
    node:
      extensions:
        - .js
        - .ts
    alias:
      map:
        - - '@'
          - ./src
      extensions:
        - .js
        - .ts
        - .css
  import/extensions:
    - .js
    - .ts
  jsdoc:
    mode: closure
globals:
  defineProps: readonly
  defineEmits: readonly
  defineExpose: readonly
  withDefaults: readonly
rules:
  # no-use-before-define: off
  # no-unused-vars: off
  # no-shadow: off
  # no-dupe-class-members: off
  # indent: off
  # func-call-spacing: off
  # semi: off
  # comma-dangle: off
  # object-curly-spacing: off
  # space-before-function-paren: off
  # vue/no-mutating-props: off
  # semi-spacing: error
  # space-infix-ops: error
  no-var: error
  eqeqeq: error
  # no-multi-spaces: warn
  # eol-last:
  #   - error
  #   - always
  no-void:
    - error
    - allowAsStatement: true
  # quotes:
  #   - error
  #   - single
  space-in-parens:
    - error
    - never
  no-plusplus:
    - error
    - allowForLoopAfterthoughts: true
  radix:
    - error
    - always
  id-length:
    - error
    - properties: never
  # no-trailing-spaces: warn
  # arrow-spacing: warn
  # curly: warn
  # brace-style: warn
  # comma-style: warn
  # comma-spacing:
  #   - warn
  #   - before: false
  #     after: true
  # array-bracket-spacing:
  #   - warn
  #   - never
  # object-property-newline:
  #   - warn
  #   - allowAllPropertiesOnSameLine: true
  # operator-linebreak:
  #   - warn
  #   - after
  # no-multiple-empty-lines:
  #   - warn
  #   - max: 2
  #     maxBOF: 0
  # "@typescript-eslint/semi":
  #   - error
  #   - never
  # "@typescriptmember-delimiter-style-eslint/":
  #   - error
  '@typescript-eslint/no-use-before-define':
    - error
    - functions: false
      classes: false
      typedefs: false
  '@typescript-eslint/no-unused-vars':
    - error
  '@typescript-eslint/no-shadow':
    - error
  '@typescript-eslint/prefer-enum-initializers':
    - error
  '@typescript-eslint/no-duplicate-enum-values':
    - error
  '@typescript-eslint/prefer-literal-enum-member':
    - error
  '@typescript-eslint/array-type':
    - error
  '@typescript-eslint/no-dupe-class-members':
    - error
  # "@typescript-eslint/space-before-function-paren":
  #   - warn
  #   - anonymous: always
  #     named: never
  #     asyncArrow: always
  # "@typescript-eslint/indent":
  #   - error
  #   - 2
  #   - SwitchCase: 1
  # "@typescript-eslint/func-call-spacing":
  #   - error
  #   - never
  # "@typescript-eslint/comma-dangle":
  #   - warn
  #   - always-multiline
  # "@typescript-eslint/object-curly-spacing":
  #   - warn
  #   - always
  # import
  import/no-unresolved:
    - error
    - commonjs: true
      ignore: ['^virtual:']
  # vue
  # vue/html-indent:
  #   - warn
  #   - 2
  vue/max-attributes-per-line:
    - warn
    - singleline: 5
      multiline: 1
  vue/html-closing-bracket-newline:
    - warn
    - singleline: never
      multiline: always
  # vue/comma-dangle:
  #   - warn
  #   - always-multiline
  vue/custom-event-name-casing:
    - error
    - kebab-case
  vue/prop-name-casing:
    - error
    - camelCase
  vue/attribute-hyphenation:
    - error
    - always
  vue/v-on-event-hyphenation:
    - error
    - always
  vue/component-tags-order:
    - error
    - order:
        - - template
          - script
        - style
  vue/component-name-in-template-casing:
    - warn
    - PascalCase
  vue/attributes-order:
    - error
  vue/require-explicit-emits:
    - error
  vue/block-tag-newline:
    - error
  vue/no-potential-component-option-typo:
    - error
    - presets:
        - all
  vue/v-on-function-call:
    - error
    - never
  vue/valid-define-props:
    - error
  vue/valid-define-emits:
    - error
  vue/padding-line-between-blocks:
    - error
    - always
